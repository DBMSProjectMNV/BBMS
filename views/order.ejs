<%- include('partials/header'); %>
<title>Orders</title>
<%- include('partials/layout'); %>
<main>
  <div class="container-flex">
    <h2>Orders</h2>
    <div class="orders-container">
      <h3>Pending</h3>
      <% if (pending.length == 0) { %>
        <p>Empty</p>
      <% } %>
      <div class="accordion">
        <% for (let i = 0; i < pending.length; i++) { const order = pending[i] %>
          <div class="collapse">
            <p class="accordion-header" tabindex="0">Order <%= i + 1 %>:</p>
            <div class="accordion-body">
              <ul class="dll">
                <li><span>Supplier name: </span><span><%= supmap.get(order['Supplier_id']) %></span></li>
                <li><span>Medicine: </span><span><%= order['Medicine_name'] %></span></li>
                <li><span>Quantity: </span><span><%= order['Quantity'] %></span></li>
                <li><span>Price: </span><span><%= order['MRP'] %></span></li>
                <li><span>Order date: </span><span><%= order['Order_date'].toDateString() %></span></li>
              </ul>
              <p class="row">
                <a href="/orders/edit?id=<%= order['Order_id'] %>" class="button small">Edit</a>
              </p>
              <p class="row">
                <button type="button" class="btn-finish button small" data-oid="<%= order['Order_id'] %>">Complete</button>
                <button type="button" class="btn-cancel button small" data-oid="<%= order['Order_id'] %>">Cancel</button>
              </p>
            </div>
          </div>
        <% } %>
      </div>
    </div>
    <div>
      <h3>Completed</h3>
      <% if (completed.length == 0) { %>
        <p>Empty</p>
      <% } %>
      <div class="accordion">
        <% for (let i = 0; i < completed.length; i++) { const order = completed[i] %>
          <div class="collapse">
            <p class="accordion-header" tabindex="0">Order <%= i + 1 %>:</p>
            <div class="accordion-body">
              <ul class="dll">
                <li><span>Supplier name: </span><span><%= supmap.get(order['Supplier_id']) %></span></li>
                <li><span>Medicine: </span><span><%= order['Medicine_name'] %></span></li>
                <li><span>Quantity: </span><span><%= order['Quantity'] %></span></li>
                <li><span>Price: </span><span><%= order['MRP'] %></span></li>
                <li><span>Order date: </span><span><%= order['Order_date'].toDateString() %></span></li>
              </ul>
            </div>
          </div>
        <% } %>
      </div>
    </div>
    <div>
      <h3>Cancelled</h3>
      <% if (cancelled.length == 0) { %>
        <p class="center">Empty</p>
      <% } %>
      <div class="accordion">
        <% for (let i = 0; i < cancelled.length; i++) { const order = cancelled[i] %>
          <div class="collapse">
            <p class="accordion-header" tabindex="0">Order <%= i + 1 %>:</p>
            <div class="accordion-body">
              <ul class="dll">
                <li><span>Supplier name: </span><span><%= supmap.get(order['Supplier_id']) %></span></li>
                <li><span>Medicine: </span><span><%= order['Medicine_name'] %></span></li>
                <li><span>Quantity: </span><span><%= order['Quantity'] %></span></li>
                <li><span>Price: </span><span><%= order['MRP'] %></span></li>
                <li><span>Order date: </span><span><%= order['Order_date'].toDateString() %></span></li>
              </ul>
            </div>
          </div>
        <% } %>
      </div>
    </div>
    <div class="row">
      <a href="/orders/add" class="button">Add order</a>
    </div>
  </div>
</main>
<script type="text/javascript">
const completes = document.querySelectorAll('.btn-finish');
for (const btn of completes) {
  btn.addEventListener('click', async function() {
    const result = await fetch('/orders/finish?id=' + this.dataset.oid, { method: 'POST' });
    if (result.ok) {
      window.location.reload();
    } else {
      const alert = document.createElement('div');
      alert.classList.add('alert', 'error');
      alert.appendChild(document.createElement('p')).innerHTML =
      'Error while completing the order';
      const close = document.createElement('button');
      close.type = 'button';
      close.classList.add('btn-close');
      close.addEventListener('click', function() {
        this.parentElement.remove();
      });
      alert.appendChild(close);
      const div = document.querySelector('.orders-container');
      div.parentElement.insertBefore(alert, div);
    }
  });
}
const cancels = document.querySelectorAll('.btn-cancel');
for (const btn of cancels) {
  btn.addEventListener('click', async function() {
    const result = await fetch('/orders/cancel?id=' + this.dataset.oid, { method: 'POST' });
    if (result.ok) {
      window.location.reload();
    } else {
      const alert = document.createElement('div');
      alert.classList.add('alert', 'error');
      alert.appendChild(document.createElement('p')).innerHTML =
      'Error while canceling the order';
      const close = document.createElement('button');
      close.type = 'button';
      close.classList.add('btn-close');
      close.addEventListener('click', function() {
        this.parentElement.remove();
      });
      alert.appendChild(close);
      const div = document.querySelector('.orders-container');
      div.parentElement.insertBefore(alert, div);
    }
  });
}
</script>
<%- include('partials/footer') %>
